# -*- coding: utf-8 -*-
"""dsa1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HnHOGYcXcB0soN03h7KxgLcSXBl7K83x
"""

x = "MlNaruto"
y = 99
z = 8.27
a = 2+3j

type(x)

type(y)

type(z)

type(a)

a1 = 45.6
print(type(a1))

bool(9)

type(bool(9))

# Bool : True or False (checking whether a particula situation or a value is true or false)

bool(0) # bcz it's = 0 that's nothing but a neutral value

bool(0.1) #bcz it's > 0

type(True)

type(False)

x = 0
bool(x)

x = 0.00001 # > 0
bool(x)

x = -6
bool(x)

x = 1
y = 2
z = 3

n = [1,2,3] # list

# strings
i = "python"
h = 'Python'

type(i)

type(h)

t =  """i am a bad boy graduated from top school across    
     india"""

# """ tripple quotes are being used when you have your string across multiple lines"

type(t)

o =  """Johnny johnny yes papa!
     eating sugar no papa!
     open your mouth! haha haha haha!"""

type(o)

# + operator

x = "Team"
y = "India"

x

y

print(x + y)

x = "Team "
y = "India "

print(x+y)

print(x*3)

print((x+y)*3)

x

x[4]

print(x[0])
print(x[1])
print(x[2])
print(x[3])
print(x[4])

print(list(range(10)))

print(list(range(1,10,2)))

print(list(range(2,20,2)))

print(list(range(4,22,2)))

print(list(range(20,10,-2)))

x = list(range(20,10,-2))

x

x[0] = 10

x[0]

x

y = range(10,20,2)

print(y)

y[0]

y[1]

y[3]

y[4]

a = ['Naruto', 25, 500000, 6.2]

a

a[1]

a[0] --> indexing

mylist = [20, "samsung", "apple", 5.6]

print(mylist)

mylist[1] = "One plus" --> mutable

print(mylist)

mylist2 = ["samsung", "onida", "takai", "takai","samsung", 50]

print(mylist2)

list1 = [1,5,6,9,8,3]

list1

list2 = [3,8,6,9,1,5]
list2

list1 == list2

list1

list1 += [200]

list1 # dynamic in nature

list1[1:6]

del list1[6]

list1

print(9 in list1)

print(200 in list1)

print('Naruto' in list1)

a = list1 + ['Naruto']

a

print(list1*9)

print(len(list1))

print(min(list1))

print(max(list1))

tuple1 = ("Name","salary","age",6.2,89)

print(len(tuple1))

tuple2 = (2,8,9,1)

print(max(tuple2))

print(min(tuple2))

print(tuple2 + (1,2)) # concatenation

print(tuple2 * 9)

print(2 in tuple2)

print(200 not in tuple2)

for i in tuple2:
  print(i)

